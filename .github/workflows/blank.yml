name: Environment Deployment

on:
  pull_request:
    types: [opened, edited, reopened, synchronize]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Extract Pull Request Body
        id: extract
        run: |
          PR_BODY=$(jq -r '.pull_request.body' < $GITHUB_EVENT_PATH)
          echo "Pull Request Body: $PR_BODY"

          # Extract environment selection
          DEV_SELECTED=$(echo "$PR_BODY" | grep -oP '(?<=- Dev: `)Y(?=`)' || echo "N")
          STAGING_SELECTED=$(echo "$PR_BODY" | grep -oP '(?<=- Staging: `)Y(?=`)' || echo "N")
          PREPROD_SELECTED=$(echo "$PR_BODY" | grep -oP '(?<=- Preprod: `)Y(?=`)' || echo "N")
          PROD_SELECTED=$(echo "$PR_BODY" | grep -oP '(?<=- Prod: `)Y(?=`)' || echo "N")

          echo "DEV_SELECTED=$DEV_SELECTED" >> $GITHUB_ENV
          echo "STAGING_SELECTED=$STAGING_SELECTED" >> $GITHUB_ENV
          echo "PREPROD_SELECTED=$PREPROD_SELECTED" >> $GITHUB_ENV
          echo "PROD_SELECTED=$PROD_SELECTED" >> $GITHUB_ENV

          echo "Selected environments:"
          echo "Dev: $DEV_SELECTED"
          echo "Staging: $STAGING_SELECTED"
          echo "Preprod: $PREPROD_SELECTED"
          echo "Prod: $PROD_SELECTED"

          # Extract image tags only for the selected environment
          if [[ "$DEV_SELECTED" == "Y" ]]; then
            AP_IMAGE=$(echo "$PR_BODY" | grep -oP '(?<=- \*\*AP Region:\*\* `).*?(?=`)' | head -1)
            EU_IMAGE=$(echo "$PR_BODY" | grep -oP '(?<=- \*\*EU Region:\*\* `).*?(?=`)' | head -1)
            US_IMAGE=$(echo "$PR_BODY" | grep -oP '(?<=- \*\*US Region:\*\* `).*?(?=`)' | head -1)
          elif [[ "$STAGING_SELECTED" == "Y" ]]; then
            AP_IMAGE=$(echo "$PR_BODY" | grep -oP '(?<=- \*\*AP Region:\*\* `).*?(?=`)' | head -1)
            EU_IMAGE=$(echo "$PR_BODY" | grep -oP '(?<=- \*\*EU Region:\*\* `).*?(?=`)' | head -1)
            US_IMAGE=$(echo "$PR_BODY" | grep -oP '(?<=- \*\*US Region:\*\* `).*?(?=`)' | head -1)
          elif [[ "$PREPROD_SELECTED" == "Y" ]]; then
            AP_IMAGE=$(echo "$PR_BODY" | grep -oP '(?<=- \*\*AP Region:\*\* `).*?(?=`)' | head -1)
            EU_IMAGE=$(echo "$PR_BODY" | grep -oP '(?<=- \*\*EU Region:\*\* `).*?(?=`)' | head -1)
            US_IMAGE=$(echo "$PR_BODY" | grep -oP '(?<=- \*\*US Region:\*\* `).*?(?=`)' | head -1)
          elif [[ "$PROD_SELECTED" == "Y" ]]; then
            AP_IMAGE=$(echo "$PR_BODY" | grep -oP '(?<=- \*\*AP Region:\*\* `).*?(?=`)' | head -1)
            EU_IMAGE=$(echo "$PR_BODY" | grep -oP '(?<=- \*\*EU Region:\*\* `).*?(?=`)' | head -1)
            US_IMAGE=$(echo "$PR_BODY" | grep -oP '(?<=- \*\*US Region:\*\* `).*?(?=`)' | head -1)
          fi

          echo "AP_IMAGE=$AP_IMAGE" >> $GITHUB_ENV
          echo "EU_IMAGE=$EU_IMAGE" >> $GITHUB_ENV
          echo "US_IMAGE=$US_IMAGE" >> $GITHUB_ENV

      - name: Validate Selection
        run: |
          echo "Validating environment selection..."

          SELECTED_COUNT=$(( $(echo "$DEV_SELECTED $STAGING_SELECTED $PREPROD_SELECTED $PROD_SELECTED" | grep -o 'Y' | wc -l) ))
          if [[ $SELECTED_COUNT -ne 1 ]]; then
            echo "Error: Exactly one environment must be selected. Exiting."
            exit 1
          fi

      - name: Debug Extracted Images
        run: |
          echo "Selected Environment: $(if [[ $DEV_SELECTED == Y ]]; then echo Dev; elif [[ $STAGING_SELECTED == Y ]]; then echo Staging; elif [[ $PREPROD_SELECTED == Y ]]; then echo Preprod; else echo Prod; fi)"
          echo "AP Image: $AP_IMAGE"
          echo "EU Image: $EU_IMAGE"
          echo "US Image: $US_IMAGE"

      - name: Deploy
        run: |
          echo "Deploying to the selected environment..."
          echo "AP Region Image: $AP_IMAGE"
          echo "EU Region Image: $EU_IMAGE"
          echo "US Region Image: $US_IMAGE"
