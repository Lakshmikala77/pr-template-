# name: Environment Deployment

# on:
#   pull_request:
#     types: [opened, edited, reopened]

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Parse Pull Request Body
#         id: parse_pr
#         run: |
#           # Extract the pull request body
#           PR_BODY=$(jq -r '.pull_request.body' < "$GITHUB_EVENT_PATH")
#           echo "PR_BODY=$PR_BODY"

#           # Get selected environments
#           DEV_SELECTED=$(echo "$PR_BODY" | sed -n '/- Dev:/s/.*`\([^`]*\)`.*/\1/p' | tr -d '[:space:]')
#           STAGING_SELECTED=$(echo "$PR_BODY" | sed -n '/- Staging:/s/.*`\([^`]*\)`.*/\1/p' | tr -d '[:space:]')
#           PREPROD_SELECTED=$(echo "$PR_BODY" | sed -n '/- Preprod:/s/.*`\([^`]*\)`.*/\1/p' | tr -d '[:space:]')
#           PROD_SELECTED=$(echo "$PR_BODY" | sed -n '/- Prod:/s/.*`\([^`]*\)`.*/\1/p' | tr -d '[:space:]')

#           # Get image tags for each environment
#           DEV_IMAGE_AP=$(echo "$PR_BODY" | sed -n '/Dev Environment/,/Staging Environment/{/AP Region:/s/.*`\([^`]*\)`.*/\1/p}')
#           DEV_IMAGE_EU=$(echo "$PR_BODY" | sed -n '/Dev Environment/,/Staging Environment/{/EU Region:/s/.*`\([^`]*\)`.*/\1/p}')
#           DEV_IMAGE_US=$(echo "$PR_BODY" | sed -n '/Dev Environment/,/Staging Environment/{/US Region:/s/.*`\([^`]*\)`.*/\1/p}')

#           STAGING_IMAGE_AP=$(echo "$PR_BODY" | sed -n '/Staging Environment/,/Preprod Environment/{/AP Region:/s/.*`\([^`]*\)`.*/\1/p}')
#           STAGING_IMAGE_EU=$(echo "$PR_BODY" | sed -n '/Staging Environment/,/Preprod Environment/{/EU Region:/s/.*`\([^`]*\)`.*/\1/p}')
#           STAGING_IMAGE_US=$(echo "$PR_BODY" | sed -n '/Staging Environment/,/Preprod Environment/{/US Region:/s/.*`\([^`]*\)`.*/\1/p}')

#           PREPROD_IMAGE_AP=$(echo "$PR_BODY" | sed -n '/Preprod Environment/,/Prod Environment/{/AP Region:/s/.*`\([^`]*\)`.*/\1/p}')
#           PREPROD_IMAGE_EU=$(echo "$PR_BODY" | sed -n '/Preprod Environment/,/Prod Environment/{/EU Region:/s/.*`\([^`]*\)`.*/\1/p}')
#           PREPROD_IMAGE_US=$(echo "$PR_BODY" | sed -n '/Preprod Environment/,/Prod Environment/{/US Region:/s/.*`\([^`]*\)`.*/\1/p}')

#           PROD_IMAGE_AP=$(echo "$PR_BODY" | sed -n '/Prod Environment/,/Selected Regions/{/AP Region:/s/.*`\([^`]*\)`.*/\1/p}')
#           PROD_IMAGE_EU=$(echo "$PR_BODY" | sed -n '/Prod Environment/,/Selected Regions/{/EU Region:/s/.*`\([^`]*\)`.*/\1/p}')
#           PROD_IMAGE_US=$(echo "$PR_BODY" | sed -n '/Prod Environment/,/Selected Regions/{/US Region:/s/.*`\([^`]*\)`.*/\1/p}')

#           # Export the variables
#           echo "DEV_SELECTED=$DEV_SELECTED" >> $GITHUB_ENV
#           echo "STAGING_SELECTED=$STAGING_SELECTED" >> $GITHUB_ENV
#           echo "PREPROD_SELECTED=$PREPROD_SELECTED" >> $GITHUB_ENV
#           echo "PROD_SELECTED=$PROD_SELECTED" >> $GITHUB_ENV
#           echo "DEV_IMAGE_AP=$DEV_IMAGE_AP" >> $GITHUB_ENV
#           echo "DEV_IMAGE_EU=$DEV_IMAGE_EU" >> $GITHUB_ENV
#           echo "DEV_IMAGE_US=$DEV_IMAGE_US" >> $GITHUB_ENV
#           echo "STAGING_IMAGE_AP=$STAGING_IMAGE_AP" >> $GITHUB_ENV
#           echo "STAGING_IMAGE_EU=$STAGING_IMAGE_EU" >> $GITHUB_ENV
#           echo "STAGING_IMAGE_US=$STAGING_IMAGE_US" >> $GITHUB_ENV
#           echo "PREPROD_IMAGE_AP=$PREPROD_IMAGE_AP" >> $GITHUB_ENV
#           echo "PREPROD_IMAGE_EU=$PREPROD_IMAGE_EU" >> $GITHUB_ENV
#           echo "PREPROD_IMAGE_US=$PREPROD_IMAGE_US" >> $GITHUB_ENV
#           echo "PROD_IMAGE_AP=$PROD_IMAGE_AP" >> $GITHUB_ENV
#           echo "PROD_IMAGE_EU=$PROD_IMAGE_EU" >> $GITHUB_ENV
#           echo "PROD_IMAGE_US=$PROD_IMAGE_US" >> $GITHUB_ENV

#       - name: Debug Parsed Variables
#         run: |
#           echo "Debug: Loaded environment variables"
#           echo "DEV_SELECTED=$DEV_SELECTED"
#           echo "STAGING_SELECTED=$STAGING_SELECTED"
#           echo "PREPROD_SELECTED=$PREPROD_SELECTED"
#           echo "PROD_SELECTED=$PROD_SELECTED"
#           echo "DEV_IMAGE_AP=$DEV_IMAGE_AP"
#           echo "STAGING_IMAGE_AP=$STAGING_IMAGE_AP"
#           echo "PREPROD_IMAGE_AP=$PREPROD_IMAGE_AP"
#           echo "PROD_IMAGE_AP=$PROD_IMAGE_AP"

#       - name: Display Selected Environments
#         run: |
#           echo "Selected environments: "

#           if [ "$DEV_SELECTED" == "Y" ]; then
#             echo "Dev: AP=$DEV_IMAGE_AP, EU=$DEV_IMAGE_EU, US=$DEV_IMAGE_US"
#           fi
#           if [ "$STAGING_SELECTED" == "Y" ]; then
#             echo "Staging: AP=$STAGING_IMAGE_AP, EU=$STAGING_IMAGE_EU, US=$STAGING_IMAGE_US"
#           fi
#           if [ "$PREPROD_SELECTED" == "Y" ]; then
#             echo "Preprod: AP=$PREPROD_IMAGE_AP, EU=$PREPROD_IMAGE_EU, US=$PREPROD_IMAGE_US"
#           fi
#           if [ "$PROD_SELECTED" == "Y" ]; then
#             echo "Prod: AP=$PROD_IMAGE_AP, EU=$PROD_IMAGE_EU, US=$PROD_IMAGE_US"
#           fi

# name: Deploy to Dev

# # on:
# #   pull_request:
# #     types: [opened, edited, reopened, synchronize]

# # jobs:
# #   deploy:
# #     runs-on: ubuntu-latest

# #     steps:
# #       - name: Checkout Code
# #         uses: actions/checkout@v3

# #       - name: Extract Pull Request Body
# #         id: extract
# #         run: |
# #           PR_BODY=$(jq -r '.pull_request.body' < $GITHUB_EVENT_PATH)
# #           echo "Pull Request Body: $PR_BODY"

# #           # Extract image tags for Dev environment
# #           AP_IMAGE=$(echo "$PR_BODY" | grep -oP '(?<=- \*\*AP Region:\*\* `).*?(?=`)')
# #           EU_IMAGE=$(echo "$PR_BODY" | grep -oP '(?<=- \*\*EU Region:\*\* `).*?(?=`)')
# #           US_IMAGE=$(echo "$PR_BODY" | grep -oP '(?<=- \*\*US Region:\*\* `).*?(?=`)')

# #           echo "AP_IMAGE=$AP_IMAGE" >> $GITHUB_ENV
# #           echo "EU_IMAGE=$EU_IMAGE" >> $GITHUB_ENV
# #           echo "US_IMAGE=$US_IMAGE" >> $GITHUB_ENV

# #           echo "Extracted AP Image: $AP_IMAGE"
# #           echo "Extracted EU Image: $EU_IMAGE"
# #           echo "Extracted US Image: $US_IMAGE"

# #       - name: Debug Output
# #         run: |
# #           echo "AP Image: $AP_IMAGE"
# #           echo "EU Image: $EU_IMAGE"
# #           echo "US Image: $US_IMAGE"

# #       - name: Deployment Step
# #         run: |
# #           echo "Deploying to Dev environment..."
# #           echo "Using images:"
# #           echo "- AP Region: $AP_IMAGE"
# #           echo "- EU Region: $EU_IMAGE"
# #           echo "- US Region: $US_IMAGE"



name: Environment Deployment

on:
  pull_request:
    types: [opened, edited, reopened]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Parse and Validate PR Body
        id: parse_pr
        run: |
          # Extract the pull request body
          PR_BODY=$(jq -r '.pull_request.body' < "$GITHUB_EVENT_PATH")
          echo "PR_BODY=$PR_BODY"

          # Initialize selected environment variables
          DEV_SELECTED=$(echo "$PR_BODY" | grep -oP '(?<=- Dev: `)[^`]+')
          STAGING_SELECTED=$(echo "$PR_BODY" | grep -oP '(?<=- Staging: `)[^`]+')
          PREPROD_SELECTED=$(echo "$PR_BODY" | grep -oP '(?<=- Preprod: `)[^`]+')
          PROD_SELECTED=$(echo "$PR_BODY" | grep -oP '(?<=- Prod: `)[^`]+')

          echo "DEV_SELECTED=$DEV_SELECTED" >> $GITHUB_ENV
          echo "STAGING_SELECTED=$STAGING_SELECTED" >> $GITHUB_ENV
          echo "PREPROD_SELECTED=$PREPROD_SELECTED" >> $GITHUB_ENV
          echo "PROD_SELECTED=$PROD_SELECTED" >> $GITHUB_ENV

          # Extract image tags for each region
          DEV_IMAGE_AP=$(echo "$PR_BODY" | grep -A 3 "Dev Environment" | grep "AP Region:" | awk -F'`' '{print $2}' | tr -d '[:space:]')
          DEV_IMAGE_EU=$(echo "$PR_BODY" | grep -A 3 "Dev Environment" | grep "EU Region:" | awk -F'`' '{print $2}' | tr -d '[:space:]')
          DEV_IMAGE_US=$(echo "$PR_BODY" | grep -A 3 "Dev Environment" | grep "US Region:" | awk -F'`' '{print $2}' | tr -d '[:space:]')

          STAGING_IMAGE_AP=$(echo "$PR_BODY" | grep -A 3 "Staging Environment" | grep "AP Region:" | awk -F'`' '{print $2}' | tr -d '[:space:]')
          STAGING_IMAGE_EU=$(echo "$PR_BODY" | grep -A 3 "Staging Environment" | grep "EU Region:" | awk -F'`' '{print $2}' | tr -d '[:space:]')
          STAGING_IMAGE_US=$(echo "$PR_BODY" | grep -A 3 "Staging Environment" | grep "US Region:" | awk -F'`' '{print $2}' | tr -d '[:space:]')

          # Export image tags to the environment
          echo "DEV_IMAGE_AP=$DEV_IMAGE_AP" >> $GITHUB_ENV
          echo "DEV_IMAGE_EU=$DEV_IMAGE_EU" >> $GITHUB_ENV
          echo "DEV_IMAGE_US=$DEV_IMAGE_US" >> $GITHUB_ENV
          echo "STAGING_IMAGE_AP=$STAGING_IMAGE_AP" >> $GITHUB_ENV
          echo "STAGING_IMAGE_EU=$STAGING_IMAGE_EU" >> $GITHUB_ENV
          echo "STAGING_IMAGE_US=$STAGING_IMAGE_US" >> $GITHUB_ENV

      - name: Validate and Display Selected Environments
        run: |
          echo "Selected Environments:"

          if [ "$DEV_SELECTED" == "Y" ]; then
            if [ -z "$DEV_IMAGE_AP" ] || [ -z "$DEV_IMAGE_EU" ] || [ -z "$DEV_IMAGE_US" ]; then
              echo "Error: Missing image tag values for Dev Environment."
              exit 1
            fi
            echo "Dev: AP=$DEV_IMAGE_AP, EU=$DEV_IMAGE_EU, US=$DEV_IMAGE_US"
          fi

          if [ "$STAGING_SELECTED" == "Y" ]; then
            if [ -z "$STAGING_IMAGE_AP" ] || [ -z "$STAGING_IMAGE_EU" ] || [ -z "$STAGING_IMAGE_US" ]; then
              echo "Error: Missing image tag values for Staging Environment."
              exit 1
            fi
            echo "Staging: AP=$STAGING_IMAGE_AP, EU=$STAGING_IMAGE_EU, US=$STAGING_IMAGE_US"
          fi

          if [ "$PREPROD_SELECTED" == "Y" ]; then
            echo "Preprod is selected but not implemented in this step."
          fi

          if [ "$PROD_SELECTED" == "Y" ]; then
            echo "Production is selected but not implemented in this step."
          fi

